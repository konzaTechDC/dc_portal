# Generated by Django 4.0.5 on 2022-06-15 10:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('services', '0007_remove_category_service_name_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images')),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
                ('created', models.DateTimeField(auto_now=True)),
                ('updated', models.DateTimeField(auto_now_add=True)),
                ('service_category', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CloudService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cloud_service_name', models.CharField(max_length=150, verbose_name='service name')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images')),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CloudServiceFlavour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(max_length=50)),
                ('cost', models.FloatField(verbose_name='Cost USD/Month')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images')),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
                ('cloud_service_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.cloudservice')),
            ],
        ),
        migrations.CreateModel(
            name='LevelOne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Servic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=150, verbose_name='service name')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images')),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.IntegerField(choices=[(1, 'Cloud Services'), (2, 'Webhosting Services'), (3, 'Collocation')], default=(1, 'Cloud Services'), unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TopLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Webhosting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('webhosting_service_name', models.CharField(max_length=150, verbose_name='service name')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images')),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WebhostingFlavour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(max_length=50)),
                ('cost_period', models.CharField(choices=[('Year', 'Year'), ('Month', 'Month')], default='USD/Month', max_length=6)),
                ('cost', models.FloatField(verbose_name='Cost (USD)')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images')),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
                ('webhosting_service_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.webhosting')),
            ],
        ),
        migrations.CreateModel(
            name='WebhostingOtherFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.CharField(max_length=100)),
                ('webhosting_service_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.webhostingflavour')),
            ],
        ),
        migrations.CreateModel(
            name='WebhostingHardwareREsource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpu_type', models.CharField(choices=[('CPU', 'CPU'), ('VCPU', 'VCPU')], default='VCPU', max_length=6)),
                ('cpu', models.IntegerField()),
                ('memory_unit', models.CharField(choices=[('MB', 'MB'), ('GB', 'GB')], default='GB', max_length=4)),
                ('memory', models.FloatField()),
                ('disk', models.FloatField(verbose_name='SYSTEM DISK (GB)')),
                ('bandwidth', models.CharField(choices=[('Unlimited Bandwidth', 'Unlimited Bandwidth'), ('Unlimited Bandwidth', 'Unlimited Bandwidth'), ('Unlimited Bandwidth', 'Unlimited Bandwidth'), ('300GB Bandwidth', '300GB Bandwidth'), ('400GB Bandwidth', '400GB Bandwidth'), ('500GB Bandwidth', '500GB Bandwidth'), ('600GB Bandwidth', '600GB Bandwidth'), ('700GB Bandwidth', '700GB Bandwidth'), ('30TB Bandwidth', '30TB Bandwidth')], default=('Unlimited Bandwidth', 'Unlimited Bandwidth'), max_length=50)),
                ('webhosting_service_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.webhostingflavour')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images')),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
                ('created', models.DateTimeField(auto_now=True)),
                ('updated', models.DateTimeField(auto_now_add=True)),
                ('service_type', models.CharField(max_length=50)),
                ('payment_period', models.IntegerField(choices=[(0, 'Month'), (1, 'Year')], default=(0, 'Month'))),
                ('cost', models.FloatField(verbose_name='Cost (USD)')),
                ('cpu_type', models.CharField(choices=[('CPU', 'CPU'), ('VCPU', 'VCPU')], default='VCPU', max_length=6)),
                ('cpu', models.IntegerField()),
                ('memory_unit', models.CharField(choices=[('MB', 'MB'), ('GB', 'GB')], default='GB', max_length=4)),
                ('memory', models.FloatField()),
                ('disk_type', models.CharField(choices=[('SYSTEM DISK', 'SYSTEM DISK'), ('SAS', 'SAS')], default='SYSTEM DISK', max_length=15)),
                ('disk', models.FloatField(verbose_name='DISK (GB)')),
                ('bandwidth', models.CharField(choices=[('Unlimited Bandwidth', 'Unlimited Bandwidth'), ('Unlimited Bandwidth', 'Unlimited Bandwidth'), ('Unlimited Bandwidth', 'Unlimited Bandwidth'), ('300GB Bandwidth', '300GB Bandwidth'), ('400GB Bandwidth', '400GB Bandwidth'), ('500GB Bandwidth', '500GB Bandwidth'), ('600GB Bandwidth', '600GB Bandwidth'), ('700GB Bandwidth', '700GB Bandwidth'), ('30TB Bandwidth', '30TB Bandwidth')], default=('Unlimited Bandwidth', 'Unlimited Bandwidth'), max_length=50)),
                ('service_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OtherFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now=True)),
                ('updated', models.DateTimeField(auto_now_add=True)),
                ('service_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.servicetype')),
            ],
        ),
        migrations.CreateModel(
            name='LevelTwo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.levelone')),
            ],
        ),
        migrations.CreateModel(
            name='LevelThree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.leveltwo')),
            ],
        ),
        migrations.AddField(
            model_name='levelone',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.toplevel'),
        ),
        migrations.CreateModel(
            name='HistoricalServiceType',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('image', models.TextField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('service_type', models.CharField(max_length=50)),
                ('payment_period', models.IntegerField(choices=[(0, 'Month'), (1, 'Year')], default=(0, 'Month'))),
                ('cost', models.FloatField(verbose_name='Cost (USD)')),
                ('cpu_type', models.CharField(choices=[('CPU', 'CPU'), ('VCPU', 'VCPU')], default='VCPU', max_length=6)),
                ('cpu', models.IntegerField()),
                ('memory_unit', models.CharField(choices=[('MB', 'MB'), ('GB', 'GB')], default='GB', max_length=4)),
                ('memory', models.FloatField()),
                ('disk_type', models.CharField(choices=[('SYSTEM DISK', 'SYSTEM DISK'), ('SAS', 'SAS')], default='SYSTEM DISK', max_length=15)),
                ('disk', models.FloatField(verbose_name='DISK (GB)')),
                ('bandwidth', models.CharField(choices=[('Unlimited Bandwidth', 'Unlimited Bandwidth'), ('Unlimited Bandwidth', 'Unlimited Bandwidth'), ('Unlimited Bandwidth', 'Unlimited Bandwidth'), ('300GB Bandwidth', '300GB Bandwidth'), ('400GB Bandwidth', '400GB Bandwidth'), ('500GB Bandwidth', '500GB Bandwidth'), ('600GB Bandwidth', '600GB Bandwidth'), ('700GB Bandwidth', '700GB Bandwidth'), ('30TB Bandwidth', '30TB Bandwidth')], default=('Unlimited Bandwidth', 'Unlimited Bandwidth'), max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('service_name', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='services.category')),
            ],
            options={
                'verbose_name': 'historical service type',
                'verbose_name_plural': 'historical service types',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOtherFeature',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('feature', models.CharField(max_length=100)),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('service_name', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='services.servicetype')),
            ],
            options={
                'verbose_name': 'historical other feature',
                'verbose_name_plural': 'historical other features',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCategory',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('image', models.TextField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('service_category', models.CharField(max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('service_name', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='services.service')),
            ],
            options={
                'verbose_name': 'historical category',
                'verbose_name_plural': 'historical categorys',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='CloudServiceOtherFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.CharField(max_length=100)),
                ('cloud_service_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.cloudserviceflavour')),
            ],
        ),
        migrations.CreateModel(
            name='CloudServiceHardwareResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpu_type', models.CharField(choices=[('CPU', 'CPU'), ('VCPU', 'VCPU')], default='VCPU', max_length=6)),
                ('cpu', models.IntegerField()),
                ('memory', models.FloatField(verbose_name='Memory (GB)')),
                ('disk_type', models.CharField(choices=[('SYSTEM DISK', 'SYSTEM DISK'), ('SAS', 'SAS')], default='SYSTEM DISK', max_length=15)),
                ('disk', models.FloatField(verbose_name='DISK (GB)')),
                ('cloud_service_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.cloudserviceflavour')),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='service_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.service'),
        ),
    ]
